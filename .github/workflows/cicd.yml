name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: TestDeploy
        run: dotnet restore TestDeploy.sln

      - name: Build project
        working-directory: TestDeploy
        run: dotnet build TestDeploy.sln --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: TestDeploy
        run: dotnet restore TestDeploy.sln

      - name: Run tests
        working-directory: TestDeploy
        run: dotnet test TestDeploy.sln --configuration Release

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy project files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "."
          target: "/${{ secrets.SERVER_USER }}/my_project"

      - name: Deploy application on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            # Kode nusxa ko'chirilgan katalogga o'tamiz; agar Dockerfile TestDeploy papkasida bo'lsa:
            cd /${{ secrets.SERVER_USER }}/my_project/TestDeploy

            echo "Docker imij qurilmoqda..."
            docker build -t testdeploy .

            echo "Agar mavjud bo'lsa, eski konteyner to'xtatilmoqda..."
            docker stop testdeploy || true
            docker rm testdeploy || true

            echo "Yangi konteyner ishga tushirilmoqda..."
            docker run -d -p 5000:5000 --name testdeploy testdeploy

            echo "Konteyner ishga tushishini kutamiz..."
            sleep 5

            if ! docker ps -q -f name=testdeploy; then
              echo "❌ Konteyner ishga tushmadi"
              docker logs testdeploy
              exit 1
            fi

            echo "✅ Konteyner muvaffaqiyatli ishga tushdi"
            docker ps
