name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: TestDeploy
        run: dotnet restore TestDeploy.sln

      - name: Build project
        working-directory: TestDeploy
        run: dotnet build TestDeploy.sln --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: TestDeploy
        run: dotnet restore TestDeploy.sln

      - name: Run tests
        working-directory: TestDeploy
        run: dotnet test TestDeploy.sln --configuration Release

  dockerize:
    needs: test
    runs-on: ubuntu-latest
    env:
      Docker_Username: ${{ secrets.Docker_Username }}
      Docker_Password: ${{ secrets.Docker_Password }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "$Docker_Password" | docker login -u "$Docker_Username" --password-stdin

      - name: Build Docker image
        working-directory: TestDeploy
        run: docker buildx build --platform linux/amd64 -t $Docker_Username/testdeploy --load .

      - name: Push Docker image
        run: docker push $Docker_Username/testdeploy


      - name: Push Docker image
        run: docker push $Docker_Username/testdeploy
